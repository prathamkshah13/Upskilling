1. Revision on Loops
2. Functions: 
Set of statements that perform a specific task. It takes some input and gives an Output. 


3. Call Back Functions: 
A function that is passes as an argument inside another function. 
Eg: 

function square (n){   //finds the square of the input
    return n*n;
}

function cube (n){
    return n*n*n;
}

function sumOfSquares(a,b){ 
    const val1 = square(a);
    const val2 = square(b);

    return val1 + val2;
}

function sumOfCubes(a,b){
    const val1 = cube(a);
    const val2 = cube(b);

    return val1 + val2; 
}

console.log (sumOfSquares(1,2));
console.log (sumOfCubes(1,2)); 


NOW THE CALLBACK (THIS SOLVES THE PROBLEM OF REPEATITION): 

function square (n){   //finds the square of the input
    return n*n;
}

function cube (n){
    return n*n*n;
}

function sumOfSomething(a,b,fn){ 
    const val1 = fn(a);
    const val2 = fn(b);

    return val1 + val2;
}

console ans = sumOfSomething(1,2,cube)
console.log(ans); 


4. Anonymous Functions. 
Anonymous functions are functions that are defined without a name.  SO HOW DO YOU EVEN CALL IT? 
WE CAN LITERALLY DEFINE THE FUNCTION WHEN WE ARE CALLING IT. Eg: 

console ans = sumOfSomething(1,2,cube)   

THIS BECOMES:

console ans = sumOfSomething(1,2, function (n){
    return n*n*n;
} )

// SO WE REMOVED THE NAME AND JUST PUT THE FUNCTION LOGIC. 